{
  "SciSheets_Class": "<class 'scisheets.ui.dt_table.DTTable'>",
  "_columns": [
    {
      "SciSheets_Class": "<class 'scisheets.core.column.Column'>",
      "_asis": true,
      "_cells": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16",
        "17",
        "18",
        "19",
        "20",
        "21",
        "22"
      ],
      "_formula": null,
      "_name": "row"
    },
    {
      "SciSheets_Class": "<class 'scisheets.core.column.Column'>",
      "_asis": false,
      "_cells": [
        50.0,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN
      ],
      "_formula": null,
      "_name": "LimitingPrime"
    },
    {
      "SciSheets_Class": "<class 'scisheets.core.column.Column'>",
      "_asis": false,
      "_cells": [
        2.0,
        3.0,
        5.0,
        7.0,
        11.0,
        13.0,
        17.0,
        19.0,
        23.0,
        29.0,
        31.0,
        37.0,
        41.0,
        43.0,
        47.0,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN
      ],
      "_formula": "def isPrime(n):\n  limit = int(mt.sqrt(n)) + 1\n  for m in range(2, limit):\n    if n % m == 0:\n      return False\n  return True\n\ndef findPrimes(n):\n  result = []\n  for m in range(2, n):\n    if isPrime(m):\n      result.append(m)\n  return result\n\nlimit_prime = int(LimitingPrime[0])\nPrimes = findPrimes(limit_prime)",
      "_name": "Primes"
    }
  ],
  "_epilogue_formula": "",
  "_filepath": null,
  "_hidden_columns": [],
  "_is_evaluate_formulas": true,
  "_name": "Primes",
  "_prologue_formula": ""
}