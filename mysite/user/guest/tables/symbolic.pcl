ccopy_reg
_reconstructor
p0
(cscisheets.ui.dt_table
DTTable
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'_columns'
p6
(lp7
g0
(cscisheets.core.column
Column
p8
g2
Ntp9
Rp10
(dp11
S'_owning_table'
p12
g4
sS'_cells'
p13
(lp14
S'1'
p15
aS'2'
p16
aS'3'
p17
aS'4'
p18
asS'_datatype'
p19
S'|S1000'
p20
sS'_name'
p21
S'row'
p22
sS'_formula_statement'
p23
NsS'_formula'
p24
Nsbag0
(g8
g2
Ntp25
Rp26
(dp27
g12
g4
sg13
(lp28
Vx
p29
aVsin(x)
p30
aVcos(x)*sin(x)
p31
aVexp(x)*x*sin(x)
p32
asg19
c__builtin__
float
p33
sg21
VExpressions
p34
sg23
Nsg24
Nsbag0
(g8
g2
Ntp35
Rp36
(dp37
g13
(lp38
S'x**2/2'
p39
aS'-cos(x)'
p40
aS'sin(x)**2/2'
p41
aS'x*exp(x)*sin(x)/2 - x*exp(x)*cos(x)/2 + exp(x)*cos(x)/2'
p42
asg12
g4
sg24
Vx = Symbol('x')\u000aIntegral = [str(integrate(e, x)) for e in Expressions if e is not None]\u000aLimit_To_0 = [str(limit(e, x, 0)) for e in Expressions  if e is not None]\u000aDerivatives = [str(diff(e, x)) for e in Expressions  if e is not None]
p43
sg23
Vx = Symbol('x')\u000aIntegral = [str(integrate(e, x)) for e in Expressions if e is not None]\u000aLimit_To_0 = [str(limit(e, x, 0)) for e in Expressions  if e is not None]\u000aDerivatives = [str(diff(e, x)) for e in Expressions  if e is not None]
p44
sg21
VIntegral
p45
sbag0
(g8
g2
Ntp46
Rp47
(dp48
g13
(lp49
I0
aI0
aI0
aI0
asg12
g4
sg24
Nsg23
Nsg21
VLimit_To_0
p50
sbag0
(g8
g2
Ntp51
Rp52
(dp53
g13
(lp54
g15
aS'cos(x)'
p55
aS'-sin(x)**2 + cos(x)**2'
p56
aS'x*exp(x)*sin(x) + x*exp(x)*cos(x) + exp(x)*sin(x)'
p57
asg12
g4
sg24
Nsg23
Nsg21
VDerivatives
p58
sbasg21
Vsymbolic
p59
sb.