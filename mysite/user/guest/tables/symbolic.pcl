ccopy_reg
_reconstructor
p0
(cscisheets.ui.dt_table
DTTable
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'_columns'
p6
(lp7
g0
(cscisheets.core.column
Column
p8
g2
Ntp9
Rp10
(dp11
S'_owning_table'
p12
g4
sS'_cells'
p13
(lp14
S'1'
p15
aS'2'
p16
aS'3'
p17
aS'4'
p18
aS'5'
p19
asS'_datatype'
p20
S'|S1000'
p21
sS'_name'
p22
S'row'
p23
sS'_formula_statement'
p24
NsS'_formula'
p25
Nsbag0
(g8
g2
Ntp26
Rp27
(dp28
g12
g4
sg13
(lp29
Vx
p30
aVsin(x)
p31
aVcos(x)*sin(x)
p32
aVexp(4*x)
p33
aVexp(x)*x*x
p34
asg20
c__builtin__
float
p35
sg22
VExpressions
p36
sg24
Nsg25
Nsbag0
(g8
g2
Ntp37
Rp38
(dp39
g13
(lp40
S'x**2/2'
p41
aS'-cos(x)'
p42
aS'sin(x)**2/2'
p43
aS'exp(4*x)/4'
p44
aS'(x**2 - 2*x + 2)*exp(x)'
p45
asg12
g4
sg25
Vx = Symbol('x')\u000aIntegral = [str(integrate(e, x)) for e in Expressions if e is not None]\u000aLimit_To_0 = [str(limit(e, x, 0)) for e in Expressions  if e is not None]\u000aDerivatives = [str(diff(e, x)) for e in Expressions  if e is not None]
p46
sg24
Vx = Symbol('x')\u000aIntegral = [str(integrate(e, x)) for e in Expressions if e is not None]\u000aLimit_To_0 = [str(limit(e, x, 0)) for e in Expressions  if e is not None]\u000aDerivatives = [str(diff(e, x)) for e in Expressions  if e is not None]
p47
sg22
VIntegral
p48
sbag0
(g8
g2
Ntp49
Rp50
(dp51
g13
(lp52
I0
aI0
aI0
aI1
aI0
asg12
g4
sg25
Nsg24
Nsg22
VLimit_To_0
p53
sbag0
(g8
g2
Ntp54
Rp55
(dp56
g13
(lp57
g15
aS'cos(x)'
p58
aS'-sin(x)**2 + cos(x)**2'
p59
aS'4*exp(4*x)'
p60
aS'x**2*exp(x) + 2*x*exp(x)'
p61
asg12
g4
sg25
Nsg24
Nsg22
VDerivatives
p62
sbasg22
Vsymbolic
p63
sb.