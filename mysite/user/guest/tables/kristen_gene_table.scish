{
  "SciSheets_Class": "<class 'scisheets.ui.dt_table.DTTable'>",
  "_columns": [
    {
      "SciSheets_Class": "<class 'scisheets.core.column.Column'>",
      "_asis": true,
      "_cells": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12",
        "13",
        "14",
        "15",
        "16",
        "17",
        "18",
        "19",
        "20",
        "21",
        "22",
        "23",
        "24"
      ],
      "_formula": null,
      "_name": "row"
    },
    {
      "SciSheets_Class": "<class 'scisheets.core.column.Column'>",
      "_asis": false,
      "_cells": [
        97,
        78,
        78,
        89,
        93,
        58,
        82,
        95,
        88,
        89,
        65,
        54,
        68,
        54,
        96,
        96,
        97,
        86,
        58,
        87,
        93,
        93,
        53,
        78
      ],
      "_formula": "import random\n#EffData = [random.randint(50, 100) for x in range(24)]",
      "_name": "EffData"
    },
    {
      "SciSheets_Class": "<class 'scisheets.core.column.Column'>",
      "_asis": false,
      "_cells": [
        8.0,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN
      ],
      "_formula": "batch_size = int(BatchSize[0])",
      "_name": "BatchSize"
    },
    {
      "SciSheets_Class": "<class 'scisheets.core.column.Column'>",
      "_asis": false,
      "_cells": [
        60.0,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN
      ],
      "_formula": "min_eff = int(MinEff[0])",
      "_name": "MinEff"
    },
    {
      "SciSheets_Class": "<class 'scisheets.core.column.Column'>",
      "_asis": false,
      "_cells": [
        5.0,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN
      ],
      "_formula": "max_std = MaxStd[0]",
      "_name": "MaxStd"
    },
    {
      "SciSheets_Class": "<class 'scisheets.core.column.Column'>",
      "_asis": false,
      "_cells": [
        [
          97,
          78,
          78,
          89,
          93,
          58,
          82,
          95
        ],
        [
          88,
          89,
          65,
          54,
          68,
          54,
          96,
          96
        ],
        [
          97,
          86,
          58,
          87,
          93,
          93,
          53,
          78
        ],
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "_formula": "# Grouping groups together samples based on BatchSize\nbatch_count = len(EffData)/batch_size\nGroupedData = np.array(EffData).reshape(batch_count, batch_size)",
      "_name": "GroupedData"
    },
    {
      "SciSheets_Class": "<class 'scisheets.core.column.Column'>",
      "_asis": false,
      "_cells": [
        [
          97,
          78,
          78,
          89,
          93,
          82,
          95
        ],
        [
          88,
          89,
          65,
          68,
          96,
          96
        ],
        [
          97,
          86,
          87,
          93,
          93,
          78
        ],
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "_formula": "# Pruning eliminates values less than MinEff\nGroupedPrunedData = []\nfor data in GroupedData:\n  new_data = []\n  for d in data:\n    if d >= min_eff:\n      new_data.append(d)\n  GroupedPrunedData.append(new_data)",
      "_name": "GroupedPrunedData"
    },
    {
      "SciSheets_Class": "<class 'scisheets.core.column.Column'>",
      "_asis": false,
      "_cells": [
        [
          78,
          78,
          89,
          93,
          82,
          95
        ],
        [
          88,
          89,
          68,
          96,
          96
        ],
        [
          97,
          86,
          87,
          93,
          93
        ],
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "_formula": "#Eliminate Values if exceed MaxStd\nCensoredData = []\nfor data in GroupedPrunedData:\n  if (len(data) < 3) or (np.std(data) <= max_std):\n    CensoredData.append(data)\n  else:\n    mean = np.average(data)\n    distances = [np.abs(x - mean) for x in data]\n    max_distance = np.max(distances)\n    new_data = [x for x in data if np.abs(x - mean) < max_distance]\n    CensoredData.append(new_data)\n    ",
      "_name": "CensoredData"
    },
    {
      "SciSheets_Class": "<class 'scisheets.core.column.Column'>",
      "_asis": false,
      "_cells": [
        85.83,
        87.4,
        91.2,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN
      ],
      "_formula": "Mean = []\nfor data in CensoredData:\n  Mean.append(round(np.average(data),2))",
      "_name": "Mean"
    },
    {
      "SciSheets_Class": "<class 'scisheets.core.column.Column'>",
      "_asis": false,
      "_cells": [
        6.87,
        10.27,
        4.12,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN,
        NaN
      ],
      "_formula": "Std = []\nfor data in CensoredData:\n  Std.append(round(np.std(data),2))",
      "_name": "Std"
    }
  ],
  "_epilogue_formula": "",
  "_filepath": null,
  "_hidden_columns": [],
  "_is_evaluate_formulas": true,
  "_name": "GeneTable",
  "_prologue_formula": ""
}