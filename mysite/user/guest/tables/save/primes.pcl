ccopy_reg
_reconstructor
p0
(cscisheets.ui.dt_table
DTTable
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'_columns'
p6
(lp7
g0
(cscisheets.core.column
Column
p8
g2
Ntp9
Rp10
(dp11
S'_asis'
p12
I01
sS'_owning_table'
p13
g4
sS'_cells'
p14
(lp15
S'1'
p16
aS'2'
p17
aS'3'
p18
aS'4'
p19
aS'5'
p20
aS'6'
p21
aS'7'
p22
aS'8'
p23
aS'9'
p24
aS'10'
p25
aS'11'
p26
aS'12'
p27
aS'13'
p28
aS'14'
p29
aS'15'
p30
aS'16'
p31
aS'17'
p32
aS'18'
p33
aS'19'
p34
aS'20'
p35
aS'21'
p36
aS'22'
p37
asS'_formula_statement'
p38
g0
(cscisheets.core.column
FormulaStatement
p39
g2
Ntp40
Rp41
(dp42
S'_statement'
p43
NsS'_column'
p44
g10
sS'_isExpression'
p45
I00
sS'_isStatement'
p46
I00
sS'_formula'
p47
NsbsS'_data_class'
p48
g0
(cscisheets.core.helpers.api_util
DataClass
p49
c__builtin__
tuple
p50
(cnumpy
ndarray
p51
cscisheets.core.helpers.api_util
makeArray
p52
tp53
tp54
Rp55
sS'_name'
p56
S'row'
p57
sbag0
(g8
g2
Ntp58
Rp59
(dp60
g12
I00
sg13
g4
sg14
(lp61
F50.0
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
asg38
g0
(g39
g2
Ntp62
Rp63
(dp64
g43
Nsg44
g59
sg45
I00
sg46
I00
sg47
Nsbsg48
g0
(g49
g50
(g51
g52
tp65
tp66
Rp67
sg56
VLimitingPrime
p68
sbag0
(g8
g2
Ntp69
Rp70
(dp71
g12
I00
sg13
g4
sg14
(lp72
F2.0
aF3.0
aF5.0
aF7.0
aF11.0
aF13.0
aF17.0
aF19.0
aF23.0
aF29.0
aF31.0
aF37.0
aF41.0
aF43.0
aF47.0
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
asg38
g0
(g39
g2
Ntp73
Rp74
(dp75
g43
Vdef isPrime(n):\u000a  limit = int(mt.sqrt(n)) + 1\u000a  for m in range(2, limit):\u000a    if n % m == 0:\u000a      return False\u000a  return True\u000a\u000adef findPrimes(n):\u000a  result = []\u000a  for m in range(2, n):\u000a    if isPrime(m):\u000a      result.append(m)\u000a  return result\u000a\u000alimit_prime = int(LimitingPrime[0])\u000aPrimes = findPrimes(limit_prime)
p76
sg44
g70
sg45
I00
sg46
I00
sg47
Vdef isPrime(n):\u000a  limit = int(mt.sqrt(n)) + 1\u000a  for m in range(2, limit):\u000a    if n % m == 0:\u000a      return False\u000a  return True\u000a\u000adef findPrimes(n):\u000a  result = []\u000a  for m in range(2, n):\u000a    if isPrime(m):\u000a      result.append(m)\u000a  return result\u000a\u000alimit_prime = int(LimitingPrime[0])\u000aPrimes = findPrimes(limit_prime)
p77
sbsg48
g0
(g49
g50
(g51
g52
tp78
tp79
Rp80
sg56
VPrimes
p81
sbasS'_filepath'
p82
V/home/ubuntu/SciSheets/mysite/user/guest/tables/primes.pcl
p83
sg56
VPrimes
p84
sb.