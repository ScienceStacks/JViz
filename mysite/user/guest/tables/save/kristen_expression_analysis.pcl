ccopy_reg
_reconstructor
p0
(cscisheets.ui.dt_table
DTTable
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'_columns'
p6
(lp7
g0
(cscisheets.core.column
Column
p8
g2
Ntp9
Rp10
(dp11
S'_asis'
p12
I01
sS'_owning_table'
p13
g4
sS'_cells'
p14
(lp15
S'1'
p16
aS'2'
p17
aS'3'
p18
aS'4'
p19
aS'5'
p20
aS'6'
p21
aS'7'
p22
aS'8'
p23
aS'9'
p24
aS'10'
p25
aS'11'
p26
aS'12'
p27
aS'13'
p28
aS'14'
p29
aS'15'
p30
asS'_formula_statement'
p31
g0
(cscisheets.core.column
FormulaStatement
p32
g2
Ntp33
Rp34
(dp35
S'_statement'
p36
NsS'_column'
p37
g10
sS'_isExpression'
p38
I00
sS'_isStatement'
p39
I00
sS'_formula'
p40
NsbsS'_data_class'
p41
g0
(cscisheets.core.helpers.api_util
DataClass
p42
c__builtin__
tuple
p43
(cnumpy
ndarray
p44
cscisheets.core.helpers.api_util
makeArray
p45
tp46
tp47
Rp48
sS'_name'
p49
S'row'
p50
sbag0
(g8
g2
Ntp51
Rp52
(dp53
g12
I00
sg13
g4
sg14
(lp54
I77
aI70
aI80
aI75
aI73
aI79
aI71
aI71
aI87
aI86
aI90
aI70
aI87
aI70
aI82
asg31
g0
(g32
g2
Ntp55
Rp56
(dp57
g36
V# Reference Gene C(t) 1\u000aimport random\u000asample_size = 15\u000aRGC_1 = [random.randint(70, 90) for x in range(sample_size)]
p58
sg37
g52
sg38
I00
sg39
I00
sg40
V# Reference Gene C(t) 1\u000aimport random\u000asample_size = 15\u000aRGC_1 = [random.randint(70, 90) for x in range(sample_size)]
p59
sbsg41
g48
sg49
VRGC_1
p60
sbag0
(g8
g2
Ntp61
Rp62
(dp63
g12
I00
sg13
g4
sg14
(lp64
I81
aI80
aI80
aI76
aI75
aI84
aI88
aI87
aI82
aI77
aI90
aI83
aI85
aI82
aI81
asg31
g0
(g32
g2
Ntp65
Rp66
(dp67
g36
V# Reference Gene C(t) 2\u000aimport random\u000aRGC_2 = [random.randint(70, 90) for x in range(sample_size)]
p68
sg37
g62
sg38
I00
sg39
I00
sg40
V# Reference Gene C(t) 2\u000aimport random\u000aRGC_2 = [random.randint(70, 90) for x in range(sample_size)]
p69
sbsg41
g0
(g42
g43
(g44
g45
tp70
tp71
Rp72
sg49
VRGC_2
p73
sbag0
(g8
g2
Ntp74
Rp75
(dp76
g12
I00
sg13
g4
sg14
(lp77
I81
aI88
aI80
aI98
aI87
aI88
aI92
aI98
aI95
aI80
aI92
aI92
aI96
aI95
aI89
asg31
g0
(g32
g2
Ntp78
Rp79
(dp80
g36
V# Target Gene C(t)\u000aimport random\u000aTGC = [random.randint(80, 100) for x in range(sample_size)]
p81
sg37
g75
sg38
I00
sg39
I00
sg40
V# Target Gene C(t)\u000aimport random\u000aTGC = [random.randint(80, 100) for x in range(sample_size)]
p82
sbsg41
g0
(g42
g43
(g44
g45
tp83
tp84
Rp85
sg49
VTGC
p86
sbag0
(g8
g2
Ntp87
Rp88
(dp89
g12
I00
sg13
g4
sg14
(lp90
F75.67
aF75.67
aF76.33
aF88.0
aF79.67
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
asg31
g0
(g32
g2
Ntp91
Rp92
(dp93
g36
V# Mean of censored data for RGC 1\u000ameans, _ = ProcessEff(RGC_1)\u000aMRGC_1 = s.coerceValues('MRGC_1', means) 
p94
sg37
g88
sg38
I00
sg39
I00
sg40
V# Mean of censored data for RGC 1\u000ameans, _ = ProcessEff(RGC_1)\u000aMRGC_1 = s.coerceValues('MRGC_1', means) 
p95
sbsg41
g0
(g42
g43
(g44
g45
tp96
tp97
Rp98
sg49
VMRGC_1
p99
sbag0
(g8
g2
Ntp100
Rp101
(dp102
g12
I00
sg13
g4
sg14
(lp103
F80.33
aF78.33
aF85.67
aF83.33
aF82.67
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
asg31
g0
(g32
g2
Ntp104
Rp105
(dp106
g36
V# Mean of censored data for MRGC_2\u000ameans, _ = ProcessEff(RGC_2)\u000aMRGC_2 = s.coerceValues('MRGC_2', means)
p107
sg37
g101
sg38
I00
sg39
I00
sg40
V# Mean of censored data for MRGC_2\u000ameans, _ = ProcessEff(RGC_2)\u000aMRGC_2 = s.coerceValues('MRGC_2', means)
p108
sbsg41
g0
(g42
g43
(g44
g45
tp109
tp110
Rp111
sg49
VMRGC_2
p112
sbag0
(g8
g2
Ntp113
Rp114
(dp115
g12
I00
sg13
g4
sg14
(lp116
F83.0
aF91.0
aF95.0
aF88.0
aF93.33
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
asg31
g0
(g32
g2
Ntp117
Rp118
(dp119
g36
V# Mean of censored data for TGC\u000aMTGC, _ = ProcessEff(TGC)
p120
sg37
g114
sg38
I00
sg39
I00
sg40
V# Mean of censored data for TGC\u000aMTGC, _ = ProcessEff(TGC)
p121
sbsg41
g0
(g42
g43
(g44
g45
tp122
tp123
Rp124
sg49
VMTGC
p125
sbag0
(g8
g2
Ntp126
Rp127
(dp128
g12
I00
sg13
g4
sg14
(lp129
(lp130
F0.006215
aF2.4e-05
aa(lp131
F2e-06
aF1.0
aa(lp132
F7.7e-05
aF0.157127
aa(lp133
F0.000153
aF0.001554
aa(lp134
F0.039282
aF0.000618
aaNaNaNaNaNaNaNaNaNaNasg31
g0
(g32
g2
Ntp135
Rp136
(dp137
g36
V# Relative cycle time of Tgt gene compared with ref 1\u000arelCt_1 = np.round(2**(MRGC_1 - MTGC),6)\u000arelCt_2 = np.round(2**(MRGC_2 - MTGC),6)\u000arelCt = [list(relCt_1), list(relCt_2)]\u000arelCt = np.reshape(relCt, [len(relCt_1), 2])
p138
sg37
g127
sg38
I00
sg39
I00
sg40
V# Relative cycle time of Tgt gene compared with ref 1\u000arelCt_1 = np.round(2**(MRGC_1 - MTGC),6)\u000arelCt_2 = np.round(2**(MRGC_2 - MTGC),6)\u000arelCt = [list(relCt_1), list(relCt_2)]\u000arelCt = np.reshape(relCt, [len(relCt_1), 2])
p139
sbsg41
g0
(g42
g43
(g44
g45
tp140
tp141
Rp142
sg49
VrelCt
p143
sbag0
(g8
g2
Ntp144
Rp145
(dp146
g12
I00
sg13
g4
sg14
(lp147
F0.0031
aF0.5
aF0.0786
aF0.0009
aF0.0199
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
aFnan
asg31
g0
(g32
g2
Ntp148
Rp149
(dp150
g36
VnetRelCt = [round(np.average(d),4) for d in relCt]
p151
sg37
g145
sg38
I01
sg39
I00
sg40
V[round(np.average(d),4) for d in relCt]
p152
sbsg41
g0
(g42
g43
(g44
g45
tp153
tp154
Rp155
sg49
VnetRelCt
p156
sbasS'_filepath'
p157
V/home/ubuntu/SciSheets/mysite/user/guest/tables/kristen_expression_analysis.pcl
p158
sg49
VExpressionAnalysis
p159
sb.